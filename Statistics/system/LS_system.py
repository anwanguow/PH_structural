#!/usr/bin/env python3# -*- coding: utf-8 -*-import osimport numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport seaborn as snsdef compute_persistent_homology_features(barcode_data):    stats = []    label = barcode_data['label']    for dim in ['H0', 'H1', 'H2']:        diagrams = barcode_data[dim]        if len(diagrams) == 0:            continue        lengths = diagrams[:, 1] - diagrams[:, 0]        lengths = lengths[np.isfinite(lengths)]        stats.append({            "dimension": dim,            "lifetime": lengths,            "label": label,        })    return statsbarcode_dir = "barcodes"all_features = []for barcode_file in os.listdir(barcode_dir):    if barcode_file.endswith(".npy"):        barcode_data = np.load(os.path.join(barcode_dir, barcode_file), allow_pickle=True).item()        features = compute_persistent_homology_features(barcode_data)        all_features.extend(features)features_df = pd.DataFrame(all_features)label_map = {0: 'liquid', 1: 'crystal', 2: 'amorphous'}dimension_map = {'H0': r'$H_0$', 'H1': r'$H_1$', 'H2': r'$H_2$'}color_map = {r'$H_0$': '#4B0082', r'$H_1$': '#006400', r'$H_2$': 'yellow'}features_df['label_name'] = features_df['label'].map(label_map)features_df_exploded = features_df.explode('lifetime')features_df_exploded['dimension_label'] = features_df_exploded['dimension'].map(dimension_map)plt.figure(figsize=(6, 6), dpi=300)sns.boxplot(    x='label_name',     y='lifetime',     hue='dimension_label',     data=features_df_exploded,     palette=color_map)plt.xlabel('Class', fontsize=20)plt.ylabel('Barcode Lifespan', fontsize=20)plt.xticks(fontsize=20)plt.yticks(fontsize=20)plt.legend(title='', loc='best', fontsize=16, handlelength=1.2)plt.savefig('Lifespan.png', bbox_inches='tight')plt.show()